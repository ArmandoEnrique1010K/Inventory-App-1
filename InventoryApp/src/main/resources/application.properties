# Nombre de la aplicación
spring.application.name=inventoryApp

# Puerto del servidor
server.port = 8080

# Conexion a la base de datos
# Se especifica el nombre del schema y se crea automaticamente si no existe
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/db_inventory_app?serverTimezone=GMT-5&createDatabaseIfNotExist=true

# Credenciales de acceso a la base de datos del sistema en un entorno de producción
# spring.datasource.username = masterAdmin
# spring.datasource.password = cPg9Q!8+>87J

# Credenciales de acceso a la base de datos del sistema en un entorno de pruebas
spring.datasource.username = 
spring.datasource.password = 


# Comportamiento de generación automatica de esquemas
# "update" actualiza el esquedema de la base datos, de tal manera que cree las tablas que no existen y actualiza las tablas existentes si se añaden nuevos campos.

# En un entorno de producción se recomienda no utilizar esta configuración
spring.jpa.hibernate.ddl-auto = update


# Imprime las consultas sql en la consola (no utilizar para un entorno de producción)
# spring.jpa.show-sql = true

# Nivel de loggin para las consultas sql (no utilizar para un entorno de producción)
# logging.level.org.hibernate.SQL = debug

# Dialecto que utiliza hibernate (obsoleto)
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect



# Direccion de la carpeta raiz donde se almacenan las imagenes 

# La carpeta se encuentra dentro del proyecto (no recomendado)
# storage.location = \assets


# La carpeta se encuentra dentro de la computadora (recomendado)
# Reemplazar "\" por "/" si se va a copiar y pegar una ruta de la barra de navegación

# Establece aqui la dirección de la carpeta
# storage.location = C:/Users/USER/Desktop/ArmandoEnrique1010K/Imagenes-Inventory-App


# Maneja la carga de archivos de la aplicación web

# Habilita el soporte para cargas de archivos multipart
spring.servlet.multipart.enabled=true

# Tamaño máximo permitido para un solo archivo cargado
spring.servlet.multipart.max-file-size=10MB

# Tamaño máximo total para una solicitud multipart (por ejemplo, al visualizar una imagen)
spring.servlet.multipart.max-request-size=10MB


# Configura el formato de fecha en la aplicación a año-mes-dia
# Es util cuando se quiere establecer la fecha en un <input> de tipo date
spring.mvc.format.date=yyyy-MM-dd 

# Deshabilita la página de error predeterminada de Spring Boot (whitelabel error page).
# En su lugar se utiliza la pagina de error definida en ErrorController (habilitar para entornos de producción)
server.error.whitelabel.enabled=false

# Especifica la plataforma de base de datos que se esta utilizando (Obsoleto)
# spring.jpa.database-platform = org.hibernate.dialect.MySQL5Dialect

# Formatea las sentencias SQL generadas por Hibernate para que sean más legibles (no utilizar en un entorno de producción)
# spring.jpa.properties.hibernate.format_sql = true

# Configura el nivel de registro para los tipos de Hibernate a trace para obtener información detallada (no utilizar en un entorno de producción)
# logging.level.org.hibernate.type = trace

# Establece el nivel de registro para los componentes web a debug para obtener registros más detallados (no utilizar en un entorno de producción)
# logging.level.web = info

# Desactiva el patrón Open Session in View, que puede causar problemas de rendimiento (no utilizar en un entorno de producción)
# spring.jpa.open-in-view=false

# Evita que DevTools agregue propiedades en desarrollo (utilizar en un entorno de producción)
# spring.devtools.add-properties=false